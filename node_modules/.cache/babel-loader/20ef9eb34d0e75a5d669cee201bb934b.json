{"ast":null,"code":"import axios from 'axios';\nimport { GET_PROFILE, GET_PROFILES, GET_REPOS, PROFILE_ERROR, UPDATE_PROFILE, CLEAR_PROFILE, ACCOUNT_DELETED } from './types';\nimport { setAlert } from './alert';\nexport const getCurrentProfile = () => async dispatch => {\n  try {\n    const res = await axios.get(\"http://localhost:8001/api/profile/me\");\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const getAllProfiles = () => async dispatch => {\n  dispatch({\n    type: CLEAR_PROFILE\n  });\n\n  try {\n    const res = await axios.get(\"http://localhost:8001/api/profile\");\n    dispatch({\n      type: GET_PROFILES,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const getProfileById = userId => async dispatch => {\n  try {\n    const res = await axios.get(`http://localhost:8001/api/profile/${userId}`);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const getGitHubRepos = username => async dispatch => {\n  try {\n    const res = await axios.get(`http://localhost:8001/api/profile/github/${username}`);\n    dispatch({\n      type: GET_REPOS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const createProfile = function (formData, navigate) {\n  let edit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  return async dispatch => {\n    try {\n      const res = await axios.post('http://localhost:8001/api/profile', formData);\n      dispatch({\n        type: GET_PROFILE,\n        payload: res.data\n      });\n      dispatch(setAlert(edit ? \"profile updated\" : \"profile created\", \"success\"));\n\n      if (!edit) {\n        navigate('/dashboard');\n      }\n    } catch (err) {\n      const errors = err.response.data.errors;\n\n      if (errors) {\n        errors.forEach(err => dispatch(setAlert(err.msg, 'danger')));\n      }\n\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: {\n          msg: err.response.statusText,\n          status: err.response.status\n        }\n      });\n    }\n  };\n};\nexport const addExperience = (formData, navigate) => async dispatch => {\n  try {\n    const res = await axios.put(\"http://localhost:8001/api/profile/experience\", formData);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Added Experience\", \"success\"));\n    navigate(\"/dashboard\");\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const addEducation = (formData, navigate) => async dispatch => {\n  try {\n    const res = await axios.put('http://localhost:8001/api/profile/education', formData);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('added education', 'success'));\n    navigate(\"/dashboard\");\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const deleteExperience = id => async dispatch => {\n  try {\n    const res = await axios.delete(`http://localhost:8001/api/profile/experience/${id}`);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Experience removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const deleteEducation = id => async dispatch => {\n  try {\n    const res = await axios.delete(`http://localhost:8001/api/profile/education/${id}`);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Education removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const deleteAccount = () => async dispatch => {\n  if (window.confirm('Are you sure want delete?')) {\n    try {\n      await axios.delete('http://localhost:8001/api/profile');\n      dispatch({\n        type: CLEAR_PROFILE\n      });\n      dispatch({\n        type: ACCOUNT_DELETED\n      });\n    } catch (err) {\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: {\n          msg: err.response.statusText,\n          status: err.response.status\n        }\n      });\n    }\n  }\n};","map":{"version":3,"sources":["D:/udemy-mern/server/client/src/actions/profile.js"],"names":["axios","GET_PROFILE","GET_PROFILES","GET_REPOS","PROFILE_ERROR","UPDATE_PROFILE","CLEAR_PROFILE","ACCOUNT_DELETED","setAlert","getCurrentProfile","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","getAllProfiles","getProfileById","userId","getGitHubRepos","username","createProfile","formData","navigate","edit","post","errors","forEach","addExperience","put","error","addEducation","deleteExperience","id","delete","deleteEducation","deleteAccount","window","confirm"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { GET_PROFILE,GET_PROFILES, GET_REPOS,PROFILE_ERROR, UPDATE_PROFILE, CLEAR_PROFILE, ACCOUNT_DELETED } from './types';\r\nimport { setAlert } from './alert';\r\n\r\nexport const getCurrentProfile=()=>async dispatch=>{\r\n    try{\r\n        const res=await axios.get(\"http://localhost:8001/api/profile/me\");\r\n        dispatch({\r\n            type:GET_PROFILE,\r\n            payload:res.data\r\n        })\r\n    }catch(err){\r\n        dispatch({\r\n            type:PROFILE_ERROR,\r\n            payload:{msg:err.response.statusText,status:err.response.status}\r\n        })\r\n\r\n    }\r\n    \r\n    \r\n}\r\nexport const getAllProfiles=()=>async dispatch=>{\r\n    dispatch({ type: CLEAR_PROFILE });\r\n    try{\r\n        const res=await axios.get(\"http://localhost:8001/api/profile\");\r\n        dispatch({type:GET_PROFILES,payload:res.data})\r\n\r\n    }catch(err){\r\n        dispatch({type:PROFILE_ERROR,\r\n        payload:{msg:err.response.statusText,status:err.response.status}})\r\n    }\r\n}\r\nexport const getProfileById=(userId)=>async dispatch=>{\r\n    try{\r\n        const res=await axios.get(`http://localhost:8001/api/profile/${userId}`);\r\n\r\n        dispatch({type:GET_PROFILE,payload:res.data})\r\n\r\n    }catch(err){\r\n        dispatch({type:PROFILE_ERROR,\r\n        payload:{msg:err.response.statusText,status:err.response.status}})\r\n    }\r\n}\r\n\r\nexport const getGitHubRepos=(username)=>async dispatch=>{\r\n    try{\r\n        const res=await axios.get(`http://localhost:8001/api/profile/github/${username}`);\r\n\r\n        dispatch({type:GET_REPOS,payload:res.data})\r\n\r\n    }catch(err){\r\n        dispatch({type:PROFILE_ERROR,\r\n        payload:{msg:err.response.statusText,status:err.response.status}})\r\n    }\r\n}\r\n\r\nexport const createProfile=(formData,navigate,edit=false)=>async dispatch=>{\r\n    try{\r\n    const res=await axios.post('http://localhost:8001/api/profile',formData);\r\n    dispatch({type:GET_PROFILE,payload:res.data});\r\n    dispatch(setAlert(edit ? \"profile updated\": \"profile created\",\"success\"));\r\n    if(!edit){\r\n        navigate('/dashboard')\r\n    }\r\n    }catch(err){\r\n        const errors=err.response.data.errors;\r\n        if(errors){\r\n        errors.forEach(err=>dispatch(setAlert(err.msg,'danger')))\r\n        }\r\n        dispatch({type:PROFILE_ERROR,payload:{msg:err.response.statusText,status:err.response.status}})\r\n    }\r\n\r\n}\r\n\r\nexport const addExperience=(formData,navigate)=>async dispatch=>{\r\n    try{\r\n        const res=await axios.put(\"http://localhost:8001/api/profile/experience\",formData);\r\n        dispatch({type:UPDATE_PROFILE,payload:res.data});\r\n        dispatch(setAlert(\"Added Experience\",\"success\"));\r\n        navigate(\"/dashboard\")\r\n    }catch(err){\r\n        const errors=err.response.data.errors;\r\n        if(errors) {\r\n            errors.forEach(error=>dispatch(setAlert(error.msg,'danger')))\r\n        }\r\n        dispatch({type:PROFILE_ERROR,payload:{msg:err.response.statusText,status:err.response.status}})\r\n    }\r\n}\r\n\r\nexport const addEducation=(formData,navigate)=>async dispatch=>{\r\n    try{\r\n        const res=await axios.put('http://localhost:8001/api/profile/education',formData);\r\n        dispatch({type:UPDATE_PROFILE,payload:res.data});\r\n        dispatch(setAlert('added education','success'));\r\n        navigate(\"/dashboard\");\r\n    }catch(err){\r\n        const errors=err.response.data.errors;\r\n        if(errors) {\r\n            errors.forEach(error=>dispatch(setAlert(error.msg,'danger')))\r\n        }\r\n        dispatch({type:PROFILE_ERROR,payload:{msg:err.response.statusText,status:err.response.status}})\r\n    }\r\n}\r\n\r\nexport const deleteExperience=id=>async dispatch=>{\r\n    try{\r\n        const res=await axios.delete(`http://localhost:8001/api/profile/experience/${id}`);\r\n        dispatch({type:UPDATE_PROFILE,payload:res.data});\r\n        dispatch(setAlert('Experience removed','success'))\r\n\r\n    }catch(err){\r\n        dispatch({type:PROFILE_ERROR,payload:{msg:err.response.statusText,status:err.response.status}})\r\n    }\r\n}\r\n\r\nexport const deleteEducation=id=>async dispatch=>{\r\n    try{\r\n        const res=await axios.delete(`http://localhost:8001/api/profile/education/${id}`);\r\n        dispatch({type:UPDATE_PROFILE,payload:res.data});\r\n        dispatch(setAlert('Education removed','success'))\r\n\r\n    }catch(err){\r\n        dispatch({type:PROFILE_ERROR,payload:{msg:err.response.statusText,status:err.response.status}})\r\n    }\r\n}\r\n\r\nexport const deleteAccount=()=>async dispatch=>{\r\n    if(window.confirm('Are you sure want delete?')){\r\n        try{\r\n            await axios.delete('http://localhost:8001/api/profile');\r\n            dispatch({type:CLEAR_PROFILE});\r\n            dispatch({type:ACCOUNT_DELETED});\r\n        }catch(err){\r\n            \r\n        dispatch({type:PROFILE_ERROR,payload:{msg:err.response.statusText,status:err.response.status}})\r\n\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}