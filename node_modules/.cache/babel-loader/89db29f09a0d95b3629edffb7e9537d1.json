{"ast":null,"code":"import { GET_POSTS, POST_DELETE, POST_ERROR, UPDATE_LIKE, ADD_POST } from './types';\nimport axios from 'axios';\nexport const getPosts = () => async dispatch => {\n  try {\n    const res = await axios.get(\"http://localhost:8001/api/posts\");\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const addPost = data => async dispatch => {\n  try {\n    const res = await axios.post('http://localhost:8001/api/post', data);\n  } catch (err) {}\n};\nexport const addLike = postId => async dispatch => {\n  try {\n    console.log('likepost');\n    const res = await axios.put(`http://localhost:8001/api/posts/like/${postId}`);\n    dispatch({\n      type: UPDATE_LIKE,\n      payload: {\n        id: postId,\n        likes: res.data\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const unLike = postId => async dispatch => {\n  try {\n    const res = await axios.put(`http://localhost:8001/api/posts/unlike/${postId}`);\n    dispatch({\n      type: UPDATE_LIKE,\n      payload: {\n        id: postId,\n        likes: res.data\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const deletePost = postId => async dispatch => {\n  try {\n    const res = await axios.delete(`http://localhost:8001/api/posts/${postId}`);\n    dispatch({\n      type: POST_DELETE,\n      payload: {\n        id: postId\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // export const getPostById=(id)=>async disp","map":{"version":3,"sources":["D:/udemy-mern/server/client/src/actions/post.js"],"names":["GET_POSTS","POST_DELETE","POST_ERROR","UPDATE_LIKE","ADD_POST","axios","getPosts","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","addPost","post","addLike","postId","console","log","put","id","likes","unLike","deletePost","delete"],"mappings":"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","sourcesContent":["import {GET_POSTS,POST_DELETE,POST_ERROR,UPDATE_LIKE,ADD_POST} from './types';\r\nimport axios from 'axios';\r\n\r\nexport const getPosts=()=>async dispatch=>{\r\n    try{\r\n        const res=await axios.get(\"http://localhost:8001/api/posts\")\r\n        dispatch({type:GET_POSTS,payload:res.data})\r\n    }catch(err){\r\n        dispatch({type:POST_ERROR,payload:{msg:err.response.statusText,status:err.response.status}})\r\n    }\r\n}\r\nexport const addPost=data=>async dispatch=>{\r\n    try{\r\n        const res=await axios.post('http://localhost:8001/api/post',data);\r\n    }catch(err){\r\n\r\n    }\r\n}\r\nexport const addLike=(postId)=>async dispatch=>{\r\n    try{\r\n        console.log('likepost')\r\n        const res=await axios.put(`http://localhost:8001/api/posts/like/${postId}`);\r\n\r\n        dispatch({type:UPDATE_LIKE,payload:{id:postId,likes:res.data}})\r\n\r\n    }catch(err){\r\n        dispatch({type:POST_ERROR,payload:{msg:err.response.statusText,status:err.response.status}})\r\n        dispatch({type:POST_ERROR,payload:{msg:err.response.statusText,status:err.response.status}})\r\n\r\n\r\n    }\r\n}\r\n\r\nexport const unLike=(postId)=>async dispatch=>{\r\n    try{\r\n        const res=await axios.put(`http://localhost:8001/api/posts/unlike/${postId}`);\r\n        dispatch({type:UPDATE_LIKE,payload:{id:postId,likes:res.data}})\r\n\r\n\r\n    }catch(err){\r\n        dispatch({type:POST_ERROR,payload:{msg:err.response.statusText,status:err.response.status}})\r\n    }\r\n}\r\n\r\nexport const deletePost=postId=>async dispatch=>{\r\n    try{\r\n        const res=await axios.delete(`http://localhost:8001/api/posts/${postId}`);\r\n        dispatch({type:POST_DELETE,payload:{id:postId}})\r\n    }catch(err){\r\n        dispatch({type:POST_ERROR,payload:{msg:err.response.statusText,status:err.response.status}})\r\n\r\n    }\r\n}\r\n// export const getPostById=(id)=>async disp"]},"metadata":{},"sourceType":"module"}