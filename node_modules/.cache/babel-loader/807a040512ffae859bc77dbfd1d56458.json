{"ast":null,"code":"import { GET_POSTS, POST_ERROR, UPDATE_LIKE } from './types';\nimport axios from 'axios';\nexport const getPosts = () => async dispatch => {\n  try {\n    const res = await axios.get(\"http://localhost:8001/api/posts\");\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const addLike = postId => async dispatch => {\n  try {\n    console.log('likepost');\n    const res = await axios.put(`http://localhost:8001/api/posts/like/${postId}`);\n    dispatch({\n      type: UPDATE_LIKE,\n      payload: {\n        id: postId,\n        likes: res.data\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const unLike = postId => async dispatch => {\n  try {\n    const res = await axios.put(`http://localhost:8001/api/posts/unlike/${postId}`);\n    dispatch({\n      type: UPDATE_LIKE,\n      payload: {\n        id: postId,\n        likes: res.data\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const deletePost = postId => async dispatch => {\n  try {} catch (err) {}\n}; // export const getPostById=(id)=>async disp","map":{"version":3,"sources":["D:/udemy-mern/server/client/src/actions/post.js"],"names":["GET_POSTS","POST_ERROR","UPDATE_LIKE","axios","getPosts","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","addLike","postId","console","log","put","id","likes","unLike","deletePost"],"mappings":"AAAA,SAAQA,SAAR,EAAkBC,UAAlB,EAA6BC,WAA7B,QAA+C,SAA/C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,QAAQ,GAAC,MAAI,MAAMC,QAAN,IAAgB;AACtC,MAAG;AACC,UAAMC,GAAG,GAAC,MAAMH,KAAK,CAACI,GAAN,CAAU,iCAAV,CAAhB;AACAF,IAAAA,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAACR,SAAN;AAAgBS,MAAAA,OAAO,EAACH,GAAG,CAACI;AAA5B,KAAD,CAAR;AACH,GAHD,CAGC,OAAMC,GAAN,EAAU;AACPN,IAAAA,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAACP,UAAN;AAAiBQ,MAAAA,OAAO,EAAC;AAACG,QAAAA,GAAG,EAACD,GAAG,CAACE,QAAJ,CAAaC,UAAlB;AAA6BC,QAAAA,MAAM,EAACJ,GAAG,CAACE,QAAJ,CAAaE;AAAjD;AAAzB,KAAD,CAAR;AACH;AACJ,CAPM;AASP,OAAO,MAAMC,OAAO,GAAEC,MAAD,IAAU,MAAMZ,QAAN,IAAgB;AAC3C,MAAG;AACCa,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA,UAAMb,GAAG,GAAC,MAAMH,KAAK,CAACiB,GAAN,CAAW,wCAAuCH,MAAO,EAAzD,CAAhB;AAEAZ,IAAAA,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAACN,WAAN;AAAkBO,MAAAA,OAAO,EAAC;AAACY,QAAAA,EAAE,EAACJ,MAAJ;AAAWK,QAAAA,KAAK,EAAChB,GAAG,CAACI;AAArB;AAA1B,KAAD,CAAR;AAEH,GAND,CAMC,OAAMC,GAAN,EAAU;AACPN,IAAAA,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAACP,UAAN;AAAiBQ,MAAAA,OAAO,EAAC;AAACG,QAAAA,GAAG,EAACD,GAAG,CAACE,QAAJ,CAAaC,UAAlB;AAA6BC,QAAAA,MAAM,EAACJ,GAAG,CAACE,QAAJ,CAAaE;AAAjD;AAAzB,KAAD,CAAR;AACAV,IAAAA,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAACP,UAAN;AAAiBQ,MAAAA,OAAO,EAAC;AAACG,QAAAA,GAAG,EAACD,GAAG,CAACE,QAAJ,CAAaC,UAAlB;AAA6BC,QAAAA,MAAM,EAACJ,GAAG,CAACE,QAAJ,CAAaE;AAAjD;AAAzB,KAAD,CAAR;AAGH;AACJ,CAbM;AAeP,OAAO,MAAMQ,MAAM,GAAEN,MAAD,IAAU,MAAMZ,QAAN,IAAgB;AAC1C,MAAG;AACC,UAAMC,GAAG,GAAC,MAAMH,KAAK,CAACiB,GAAN,CAAW,0CAAyCH,MAAO,EAA3D,CAAhB;AACAZ,IAAAA,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAACN,WAAN;AAAkBO,MAAAA,OAAO,EAAC;AAACY,QAAAA,EAAE,EAACJ,MAAJ;AAAWK,QAAAA,KAAK,EAAChB,GAAG,CAACI;AAArB;AAA1B,KAAD,CAAR;AAGH,GALD,CAKC,OAAMC,GAAN,EAAU;AACPN,IAAAA,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAACP,UAAN;AAAiBQ,MAAAA,OAAO,EAAC;AAACG,QAAAA,GAAG,EAACD,GAAG,CAACE,QAAJ,CAAaC,UAAlB;AAA6BC,QAAAA,MAAM,EAACJ,GAAG,CAACE,QAAJ,CAAaE;AAAjD;AAAzB,KAAD,CAAR;AACH;AACJ,CATM;AAWP,OAAO,MAAMS,UAAU,GAACP,MAAM,IAAE,MAAMZ,QAAN,IAAgB;AAC5C,MAAG,CAEF,CAFD,CAEC,OAAMM,GAAN,EAAU,CAEV;AACJ,CANM,C,CAOP","sourcesContent":["import {GET_POSTS,POST_ERROR,UPDATE_LIKE} from './types';\r\nimport axios from 'axios';\r\n\r\nexport const getPosts=()=>async dispatch=>{\r\n    try{\r\n        const res=await axios.get(\"http://localhost:8001/api/posts\")\r\n        dispatch({type:GET_POSTS,payload:res.data})\r\n    }catch(err){\r\n        dispatch({type:POST_ERROR,payload:{msg:err.response.statusText,status:err.response.status}})\r\n    }\r\n}\r\n\r\nexport const addLike=(postId)=>async dispatch=>{\r\n    try{\r\n        console.log('likepost')\r\n        const res=await axios.put(`http://localhost:8001/api/posts/like/${postId}`);\r\n\r\n        dispatch({type:UPDATE_LIKE,payload:{id:postId,likes:res.data}})\r\n\r\n    }catch(err){\r\n        dispatch({type:POST_ERROR,payload:{msg:err.response.statusText,status:err.response.status}})\r\n        dispatch({type:POST_ERROR,payload:{msg:err.response.statusText,status:err.response.status}})\r\n\r\n\r\n    }\r\n}\r\n\r\nexport const unLike=(postId)=>async dispatch=>{\r\n    try{\r\n        const res=await axios.put(`http://localhost:8001/api/posts/unlike/${postId}`);\r\n        dispatch({type:UPDATE_LIKE,payload:{id:postId,likes:res.data}})\r\n\r\n\r\n    }catch(err){\r\n        dispatch({type:POST_ERROR,payload:{msg:err.response.statusText,status:err.response.status}})\r\n    }\r\n}\r\n\r\nexport const deletePost=postId=>async dispatch=>{\r\n    try{\r\n\r\n    }catch(err){\r\n        \r\n    }\r\n}\r\n// export const getPostById=(id)=>async disp"]},"metadata":{},"sourceType":"module"}