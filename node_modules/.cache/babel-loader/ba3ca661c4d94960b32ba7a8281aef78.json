{"ast":null,"code":"var _jsxFileName = \"D:\\\\udemy-mern\\\\server\\\\client\\\\src\\\\components\\\\profile\\\\ProfileGithub.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, Fragment } from 'react';\nimport { getGitHubRepos } from '../../actions/profile';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProfileGithub = () => {\n  _s();\n\n  const {\n    username,\n    getGithubRepos,\n    repos\n  } = useSelector(state => state.profile.repos);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getGitHubRepos(username));\n  }, [getGitHubRepos, username]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"profile-github\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        class: \"text-primary my-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"fab fa-github\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }, this), \" Github Repos\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), repos.map(repo => /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"repo bg-white p-1 my-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: repo.html_url,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: repo.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: repo.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"badge badge-primary\",\n              children: [\"Stars:\", repo.stargazers_count]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"badge badge-dark\",\n              children: [\"Watchers: \", repo.watchers_count]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"badge badge-light\",\n              children: [\"Forks: \", repo.forks_count]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)]\n      }, repo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 18\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 7\n  }, this);\n};\n\n_s(ProfileGithub, \"2NheG8rVJDIKpwAudmW/eEb3gLE=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = ProfileGithub;\nexport default ProfileGithub;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileGithub\");","map":{"version":3,"sources":["D:/udemy-mern/server/client/src/components/profile/ProfileGithub.js"],"names":["React","useEffect","Fragment","getGitHubRepos","useDispatch","useSelector","ProfileGithub","username","getGithubRepos","repos","state","profile","dispatch","map","repo","html_url","name","description","stargazers_count","watchers_count","forks_count","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,QAAuC,OAAvC;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,SAASC,WAAT,EAAqBC,WAArB,QAAuC,aAAvC;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AACxB,QAAM;AAACC,IAAAA,QAAD;AAAWC,IAAAA,cAAX;AAA0BC,IAAAA;AAA1B,MAAiCJ,WAAW,CAACK,KAAK,IAAEA,KAAK,CAACC,OAAN,CAAcF,KAAtB,CAAlD;AACA,QAAMG,QAAQ,GAACR,WAAW,EAA1B;AACAH,EAAAA,SAAS,CAAC,MAAI;AACVW,IAAAA,QAAQ,CAACT,cAAc,CAACI,QAAD,CAAf,CAAR;AACH,GAFQ,EAEP,CAACJ,cAAD,EAAgBI,QAAhB,CAFO,CAAT;AAGF,sBACI,QAAC,QAAD;AAAA,2BACE;AAAK,MAAA,KAAK,EAAC,gBAAX;AAAA,8BACA;AAAI,QAAA,KAAK,EAAC,mBAAV;AAAA,gCACI;AAAG,UAAA,KAAK,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA,gBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,EAKME,KAAK,CAACI,GAAN,CAAUC,IAAI,iBACX;AAAK,QAAA,KAAK,EAAC,wBAAX;AAAA,gCACG;AAAA,kCACI;AAAA,mCAAI;AAAG,cAAA,IAAI,EAAEA,IAAI,CAACC,QAAd;AAAwB,cAAA,MAAM,EAAC,QAA/B;AACJ,cAAA,GAAG,EAAC,qBADA;AAAA,wBACuBD,IAAI,CAACE;AAD5B;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAGI;AAAA,sBACKF,IAAI,CAACG;AADV;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADH,eAQG;AAAA,iCACI;AAAA,oCACI;AAAI,cAAA,SAAS,EAAC,qBAAd;AAAA,mCAA2CH,IAAI,CAACI,gBAAhD;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAI,cAAA,SAAS,EAAC,kBAAd;AAAA,uCACYJ,IAAI,CAACK,cADjB;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAKI;AAAI,cAAA,SAAS,EAAC,mBAAd;AAAA,oCAA0CL,IAAI,CAACM,WAA/C;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBARH;AAAA,SAAyCN,IAAI,CAACO,EAA9C;AAAA;AAAA;AAAA;AAAA,cADH,CALN;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADJ;AA+BD,CArCD;;GAAMf,a;UACqCD,W,EACxBD,W;;;KAFbE,a;AAuCN,eAAeA,aAAf","sourcesContent":["import React,{useEffect,Fragment} from 'react';\r\nimport { getGitHubRepos } from '../../actions/profile';\r\nimport { useDispatch,useSelector} from 'react-redux';\r\n\r\nconst ProfileGithub = () => {\r\n    const {username, getGithubRepos,repos}=useSelector(state=>state.profile.repos)\r\n    const dispatch=useDispatch();\r\n    useEffect(()=>{\r\n        dispatch(getGitHubRepos(username))\r\n    },[getGitHubRepos,username])\r\n  return (\r\n      <Fragment>\r\n        <div class=\"profile-github\">\r\n        <h2 class=\"text-primary my-1\">\r\n            <i class=\"fab fa-github\"></i> Github Repos\r\n        </h2>\r\n         \r\n             {repos.map(repo=>(\r\n                 <div class=\"repo bg-white p-1 my-1\" key={repo.id}>\r\n                    <div >\r\n                        <h4><a href={repo.html_url} target=\"_blank\"\r\n                        rel=\"noopener noreferrer\">{repo.name}</a></h4>\r\n                        <p>\r\n                            {repo.description}\r\n                        </p>\r\n                    </div>\r\n                    <div>\r\n                        <ul>\r\n                            <li className=\"badge badge-primary\">Stars:{repo.stargazers_count}</li>\r\n                            <li className=\"badge badge-dark\">\r\n                             Watchers: {repo.watchers_count}\r\n                            </li>\r\n                            <li className=\"badge badge-light\">Forks: {repo.forks_count}</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>   \r\n             ))}\r\n       </div>\r\n    </Fragment>\r\n\r\n  );\r\n};\r\n\r\nexport default ProfileGithub;\r\n"]},"metadata":{},"sourceType":"module"}