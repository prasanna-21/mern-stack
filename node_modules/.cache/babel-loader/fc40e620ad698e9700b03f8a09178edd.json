{"ast":null,"code":"import { GET_POSTS, POST_DELETE, POST_ERROR, UPDATE_LIKE, ADD_POST } from './types';\nimport axios from 'axios';\nimport { setAlert } from './alert';\nexport const getPosts = () => async dispatch => {\n  try {\n    const res = await axios.get(\"http://localhost:8001/api/posts\");\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const getPost = id => async dispatch => {\n  try {\n    const res = await axios.get(`http://localhost:8001/api/posts/${id}`);\n    dispatch({\n      type: GET_POST,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const addPost = data => async dispatch => {\n  try {\n    console.log(\"adding post\");\n    const res = await axios.post(\"http://localhost:8001/api/posts\", data);\n    dispatch({\n      type: ADD_POST,\n      payload: res.data\n    });\n    dispatch(setAlert(\"post created\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const addLike = postId => async dispatch => {\n  try {\n    console.log('likepost');\n    const res = await axios.put(`http://localhost:8001/api/posts/like/${postId}`);\n    dispatch({\n      type: UPDATE_LIKE,\n      payload: {\n        id: postId,\n        likes: res.data\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const unLike = postId => async dispatch => {\n  try {\n    const res = await axios.put(`http://localhost:8001/api/posts/unlike/${postId}`);\n    dispatch({\n      type: UPDATE_LIKE,\n      payload: {\n        id: postId,\n        likes: res.data\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const deletePost = postId => async dispatch => {\n  try {\n    await axios.delete(`http://localhost:8001/api/posts/${postId}`);\n    dispatch({\n      type: POST_DELETE,\n      payload: {\n        id: postId\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        status: err.response.status\n      }\n    });\n  }\n}; // export const getPostById=(id)=>async disp","map":{"version":3,"sources":["D:/udemy-mern/server/client/src/actions/post.js"],"names":["GET_POSTS","POST_DELETE","POST_ERROR","UPDATE_LIKE","ADD_POST","axios","setAlert","getPosts","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","getPost","id","GET_POST","addPost","console","log","post","addLike","postId","put","likes","unLike","deletePost","delete"],"mappings":"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","sourcesContent":["import {GET_POSTS,POST_DELETE,POST_ERROR,UPDATE_LIKE,ADD_POST} from './types';\r\nimport axios from 'axios';\r\nimport { setAlert } from './alert';\r\n\r\nexport const getPosts=()=>async dispatch=>{\r\n    try{\r\n        const res=await axios.get(\"http://localhost:8001/api/posts\")\r\n        dispatch({type:GET_POSTS,payload:res.data})\r\n    }catch(err){\r\n        dispatch({type:POST_ERROR,payload:{msg:err.response.statusText,status:err.response.status}})\r\n    }\r\n}\r\nexport const getPost=(id)=>async dispatch=>{\r\n    try{\r\n        const res=await axios.get(`http://localhost:8001/api/posts/${id}`)\r\n        dispatch({type:GET_POST,payload:res.data})\r\n    }catch(err){\r\n        dispatch({type:POST_ERROR,payload:{msg:err.response.statusText,status:err.response.status}})\r\n    }\r\n}\r\nexport const addPost=data=>async dispatch=>{\r\n    try{\r\n        console.log(\"adding post\");\r\n        const res=await axios.post(\"http://localhost:8001/api/posts\",data);\r\n        dispatch({type:ADD_POST,payload:res.data})\r\n        dispatch(setAlert(\"post created\",\"success\"));\r\n    }catch(err){\r\n        dispatch({type:POST_ERROR,payload:{msg:err.response.statusText,status:err.response.status}})\r\n\r\n    }\r\n}\r\nexport const addLike=(postId)=>async dispatch=>{\r\n    try{\r\n        console.log('likepost')\r\n        const res=await axios.put(`http://localhost:8001/api/posts/like/${postId}`);\r\n\r\n        dispatch({type:UPDATE_LIKE,payload:{id:postId,likes:res.data}})\r\n\r\n    }catch(err){\r\n        dispatch({type:POST_ERROR,payload:{msg:err.response.statusText,status:err.response.status}})\r\n        dispatch({type:POST_ERROR,payload:{msg:err.response.statusText,status:err.response.status}})\r\n\r\n\r\n    }\r\n}\r\n\r\nexport const unLike=(postId)=>async dispatch=>{\r\n    try{\r\n        const res=await axios.put(`http://localhost:8001/api/posts/unlike/${postId}`);\r\n        dispatch({type:UPDATE_LIKE,payload:{id:postId,likes:res.data}})\r\n\r\n\r\n    }catch(err){\r\n        dispatch({type:POST_ERROR,payload:{msg:err.response.statusText,status:err.response.status}})\r\n    }\r\n}\r\n\r\nexport const deletePost=postId=>async dispatch=>{\r\n    try{\r\n        await axios.delete(`http://localhost:8001/api/posts/${postId}`);\r\n        dispatch({type:POST_DELETE,payload:{id:postId}})\r\n    }catch(err){\r\n        dispatch({type:POST_ERROR,payload:{status:err.response.status}})\r\n\r\n    }\r\n}\r\n// export const getPostById=(id)=>async disp"]},"metadata":{},"sourceType":"module"}