{"ast":null,"code":"import { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, USER_FAIL } from './types';\nimport { setAlert } from './alert';\nimport axios from 'axios';\nimport setAuthToken from './../utils/setAuthToken';\nexport const register = user => async dispatch => {\n  try {\n    const res = await axios.post('http://localhost:8001/api/users', user);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(err => dispatch(setAlert(err.msg, 'danger')));\n    }\n\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n};\nexport const loadUser = () => async dispatch => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\n  try {\n    const res = await axios.get('http://localhost:8001/api/auth');\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: USER_FAIL\n    });\n  }\n};","map":{"version":3,"sources":["D:/mern_full_stack/server/client/src/actions/auth.js"],"names":["REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","USER_FAIL","setAlert","axios","setAuthToken","register","user","dispatch","res","post","type","payload","data","err","errors","response","forEach","msg","loadUser","localStorage","token","get"],"mappings":"AAAA,SAAQA,gBAAR,EAAyBC,aAAzB,EAAuCC,WAAvC,EAAmDC,SAAnD,QAAmE,SAAnE;AACA,SAASC,QAAT,QAAyB,SAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AAEA,OAAO,MAAMC,QAAQ,GAAEC,IAAD,IAAS,MAAMC,QAAN,IAAgB;AAC3C,MAAG;AACC,UAAMC,GAAG,GAAC,MAAML,KAAK,CAACM,IAAN,CAAW,iCAAX,EAA6CH,IAA7C,CAAhB;AACAC,IAAAA,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAACZ,gBAAN;AAAuBa,MAAAA,OAAO,EAACH,GAAG,CAACI;AAAnC,KAAD,CAAR;AACH,GAHD,CAGC,OAAMC,GAAN,EAAU;AACP,UAAMC,MAAM,GAACD,GAAG,CAACE,QAAJ,CAAaH,IAAb,CAAkBE,MAA/B;;AACA,QAAGA,MAAH,EAAU;AACVA,MAAAA,MAAM,CAACE,OAAP,CAAeH,GAAG,IAAEN,QAAQ,CAACL,QAAQ,CAACW,GAAG,CAACI,GAAL,EAAS,QAAT,CAAT,CAA5B;AACC;;AACDV,IAAAA,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAACX;AAAN,KAAD,CAAR;AACH;AACJ,CAXM;AAYP,OAAO,MAAMmB,QAAQ,GAAC,MAAI,MAAMX,QAAN,IAAgB;AACtC,MAAGY,YAAY,CAACC,KAAhB,EAAsB;AAClBhB,IAAAA,YAAY,CAACe,YAAY,CAACC,KAAd,CAAZ;AACH;;AACD,MAAG;AACC,UAAMZ,GAAG,GAAC,MAAML,KAAK,CAACkB,GAAN,CAAU,gCAAV,CAAhB;AACAd,IAAAA,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAACV,WAAN;AAAkBW,MAAAA,OAAO,EAACH,GAAG,CAACI;AAA9B,KAAD,CAAR;AACH,GAHD,CAGC,OAAMC,GAAN,EAAU;AACPN,IAAAA,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAACT;AAAN,KAAD,CAAR;AAEH;AACJ,CAXM","sourcesContent":["import {REGISTER_SUCCESS,REGISTER_FAIL,USER_LOADED,USER_FAIL} from './types';\r\nimport { setAlert } from './alert';\r\nimport axios from 'axios';\r\nimport setAuthToken from './../utils/setAuthToken';\r\n\r\nexport const register=(user)=> async dispatch=>{\r\n    try{\r\n        const res=await axios.post('http://localhost:8001/api/users',user);\r\n        dispatch({type:REGISTER_SUCCESS,payload:res.data})\r\n    }catch(err){\r\n        const errors=err.response.data.errors;\r\n        if(errors){\r\n        errors.forEach(err=>dispatch(setAlert(err.msg,'danger')))\r\n        }\r\n        dispatch({type:REGISTER_FAIL})\r\n    }\r\n}\r\nexport const loadUser=()=>async dispatch=>{\r\n    if(localStorage.token){\r\n        setAuthToken(localStorage.token)\r\n    }\r\n    try{\r\n        const res=await axios.get('http://localhost:8001/api/auth');\r\n        dispatch({type:USER_LOADED,payload:res.data})\r\n    }catch(err){\r\n        dispatch({type:USER_FAIL})\r\n\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}