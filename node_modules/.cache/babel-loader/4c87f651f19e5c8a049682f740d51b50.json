{"ast":null,"code":"import { GET_POSTS, GET_POST, POST_DELETE, POST_ERROR, UPDATE_LIKE, ADD_POST, ADD_COMMENT, DELETE_COMMENT } from './types';\nimport axios from 'axios';\nimport { setAlert } from './alert';\nexport const getPosts = () => async dispatch => {\n  try {\n    const res = await axios.get(\"http://localhost:8001/api/posts\");\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const getPost = id => async dispatch => {\n  try {\n    const res = await axios.get(`http://localhost:8001/api/posts/${id}`);\n    console.log(res);\n    dispatch({\n      type: GET_POST,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const addPost = data => async dispatch => {\n  try {\n    console.log(\"adding post\");\n    const res = await axios.post(\"http://localhost:8001/api/posts\", data);\n    dispatch({\n      type: ADD_POST,\n      payload: res.data\n    });\n    dispatch(setAlert(\"post created\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const addComment = (postId, data) => async dispatch => {\n  try {\n    const res = await axios.post(`http://localhost:8001/api/posts/comment/${postId}`, data);\n    dispatch({\n      type: ADD_COMMENT,\n      payload: res.data\n    });\n    dispatch(setAlert(\"comment added\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const removeComment = (postId, commentId) => async dispatch => {\n  try {\n    const res = await axios.delete(`http://localhost:8001/api/posts/comment/${postId}/${commentId}`);\n    dispatch({\n      type: DELETE_COMMENT\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const addLike = postId => async dispatch => {\n  try {\n    console.log('likepost');\n    const res = await axios.put(`http://localhost:8001/api/posts/like/${postId}`);\n    dispatch({\n      type: UPDATE_LIKE,\n      payload: {\n        id: postId,\n        likes: res.data\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const unLike = postId => async dispatch => {\n  try {\n    const res = await axios.put(`http://localhost:8001/api/posts/unlike/${postId}`);\n    dispatch({\n      type: UPDATE_LIKE,\n      payload: {\n        id: postId,\n        likes: res.data\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const deletePost = postId => async dispatch => {\n  try {\n    await axios.delete(`http://localhost:8001/api/posts/${postId}`);\n    dispatch({\n      type: POST_DELETE,\n      payload: {\n        id: postId\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        status: err.response.status\n      }\n    });\n  }\n}; // export const getPostById=(id)=>async disp","map":{"version":3,"sources":["D:/udemy-mern/server/client/src/actions/post.js"],"names":["GET_POSTS","GET_POST","POST_DELETE","POST_ERROR","UPDATE_LIKE","ADD_POST","ADD_COMMENT","DELETE_COMMENT","axios","setAlert","getPosts","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","getPost","id","console","log","addPost","post","addComment","postId","removeComment","commentId","delete","addLike","put","likes","unLike","deletePost"],"mappings":"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","sourcesContent":["import {GET_POSTS,GET_POST,POST_DELETE,POST_ERROR,UPDATE_LIKE,ADD_POST,ADD_COMMENT,DELETE_COMMENT} from './types';\r\nimport axios from 'axios';\r\nimport { setAlert } from './alert';\r\n\r\nexport const getPosts=()=>async dispatch=>{\r\n    try{\r\n        const res=await axios.get(\"http://localhost:8001/api/posts\")\r\n        dispatch({type:GET_POSTS,payload:res.data})\r\n    }catch(err){\r\n        dispatch({type:POST_ERROR,payload:{msg:err.response.statusText,status:err.response.status}})\r\n    }\r\n}\r\nexport const getPost=(id)=>async dispatch=>{\r\n    try{\r\n        const res=await axios.get(`http://localhost:8001/api/posts/${id}`)\r\n        console.log(res)\r\n        dispatch({type:GET_POST,payload:res.data})\r\n    }catch(err){\r\n        dispatch({type:POST_ERROR,payload:{msg:err.response.statusText,status:err.response.status}})\r\n    }\r\n}\r\nexport const addPost=data=>async dispatch=>{\r\n    try{\r\n        console.log(\"adding post\");\r\n        const res=await axios.post(\"http://localhost:8001/api/posts\",data);\r\n        dispatch({type:ADD_POST,payload:res.data})\r\n        dispatch(setAlert(\"post created\",\"success\"));\r\n    }catch(err){\r\n        dispatch({type:POST_ERROR,payload:{msg:err.response.statusText,status:err.response.status}})\r\n\r\n    }\r\n}\r\nexport const addComment=(postId,data)=>async dispatch=>{\r\n    try{\r\n        const res=await axios.post(`http://localhost:8001/api/posts/comment/${postId}`,data);\r\n        dispatch({type:ADD_COMMENT,payload:res.data});\r\n        dispatch(setAlert(\"comment added\",\"success\"))\r\n    }catch(err){\r\n        dispatch({type:POST_ERROR,payload:{msg:err.response.statusText,status:err.response.status}})\r\n\r\n    }\r\n}\r\nexport const removeComment=(postId,commentId)=>async dispatch=>{\r\n    try{\r\n        const res=await axios.delete(`http://localhost:8001/api/posts/comment/${postId}/${commentId}`);\r\n        dispatch({type:DELETE_COMMENT})\r\n\r\n    }catch(err){\r\n\r\n        dispatch({type:POST_ERROR,payload:{msg:err.response.statusText,status:err.response.status}});\r\n        \r\n    }\r\n}\r\nexport const addLike=(postId)=>async dispatch=>{\r\n    try{\r\n        console.log('likepost')\r\n        const res=await axios.put(`http://localhost:8001/api/posts/like/${postId}`);\r\n\r\n        dispatch({type:UPDATE_LIKE,payload:{id:postId,likes:res.data}})\r\n\r\n    }catch(err){\r\n        dispatch({type:POST_ERROR,payload:{msg:err.response.statusText,status:err.response.status}})\r\n\r\n\r\n    }\r\n}\r\n\r\nexport const unLike=(postId)=>async dispatch=>{\r\n    try{\r\n        const res=await axios.put(`http://localhost:8001/api/posts/unlike/${postId}`);\r\n        dispatch({type:UPDATE_LIKE,payload:{id:postId,likes:res.data}})\r\n\r\n\r\n    }catch(err){\r\n        dispatch({type:POST_ERROR,payload:{msg:err.response.statusText,status:err.response.status}})\r\n    }\r\n}\r\n\r\nexport const deletePost=postId=>async dispatch=>{\r\n    try{\r\n        await axios.delete(`http://localhost:8001/api/posts/${postId}`);\r\n        dispatch({type:POST_DELETE,payload:{id:postId}})\r\n    }catch(err){\r\n        dispatch({type:POST_ERROR,payload:{status:err.response.status}})\r\n\r\n    }\r\n}\r\n\r\n// export const getPostById=(id)=>async disp"]},"metadata":{},"sourceType":"module"}